class OrdersController < ApplicationController
  before_action :authenticate_user!
  before_action :find_order, only: [:cancel, :pay, :pay_confirm]

  def index
   @orders = current_user.orders.order(id: :desc)
  end

  def create
    @order = current_user.orders.build(order_params)
    
    current_cart.items.each do |item|
      @order.order_items.build(sku_id: item.sku_id,quantity: item.quantity)
    end

    if @order.save
      linepay = LinepayService.new('/payments/request')
      linepay.perform({
        productName: "chocolate",
        amount: current_cart.total_price.to_i,
        currency: "TWD",
        confirmUrl: "http://localhost:3000/orders/confirm",
        orderId: @order.num
      })

      if linepay.success?
        redirect_to linepay.payment_url
      else
        flash[:notice] = '付款發生錯誤'
        render 'carts/checkout'        
      end

    end
  end


  def confirm
    linepay = LinepayService.new('/payments/#{params[:transactionId]}/confirm')
    linepay.perform({
      amount: @order.total_price.to_i,
      currency: "TWD",
    })

    if linepay.success?
      order_id = result["info"]["orderId"]
      transaction_id = result["info"]["transactionId"]

      order = current_user.orders.find_by(num: order_id)
      order.pay!(transaction_id: transaction_id)

      session[:foodie_cart] = nil
      redirect_to root_path, notice: '付款已完成'
    else
      redirect_to root_path, notice:'付款發生錯誤'
    end

  end

  def cancel 
    if @order.paid?
      linepay = LinepayService.new('/payments/#{@order.transaction_id}/refund')
      linepay.perform(refundAmount: @order.total_price.to_i)

      if linepay.success? 
        @order.cancel!
        redirect_to orders_path, notice: "訂單 #{@order.num} 已取消，並完成退款"        
      else
        redirect_to orders_path, notice: "退款發生錯誤"        
      end
    else
      @order.cancel!
      redirect_to orders_path, notice: "訂單 #{@order.num} 已取消"
    end
  end

  def pay
    linepay = LinepayService.new('/payments/request')
    linepay.perform({
      productName: "chocolate",
      amount: @order.total_price.to_i,
      currency: "TWD",
      confirmUrl: "http://localhost:3000/orders/#{@order.id}/pay_confirm",
      orderId: @order.num
    })  

    if linepay.success? 
      redirect_to linepay.payment_url
    else
      redirect_to orders_path, notice: '付款發生錯誤'     
    end
  end

  def pay_confirm
    linepay = LinepayService.new('/payments/#{params[:transactionId]}/confirm')
    linepay.perform({
      amount: @order.total_price.to_i,
      currency: "TWD",
    })


    if linepay.success?
      transaction_id = result["info"]["transactionId"]
      @order.pay!(transaction_id: transaction_id)
      redirect_to orders_path, notice: '付款已完成'
    else
      redirect_to orders_path, notice:'付款發生錯誤'
    end
  end


  private
  def order_params
    params.require(:order).permit(:recipient, :tel, :address, :note)
  end

  def find_order
    @order = current_user.orders.find(params[:id])
  end
end